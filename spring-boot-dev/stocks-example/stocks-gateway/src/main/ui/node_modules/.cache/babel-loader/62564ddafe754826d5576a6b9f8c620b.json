{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sudeep/Library/Mobile Documents/com~apple~CloudDocs/myfiles/NEW_LEARNINGS/SPRING-BOOT/KAFKA/STOCKS-ESG-SERVICES/dev-playground/spring-boot-dev/stocks-example/stocks-gateway/src/main/ui/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/sudeep/Library/Mobile Documents/com~apple~CloudDocs/myfiles/NEW_LEARNINGS/SPRING-BOOT/KAFKA/STOCKS-ESG-SERVICES/dev-playground/spring-boot-dev/stocks-example/stocks-gateway/src/main/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// adapted from https://github.com/taniarascia/react-hooks\nimport'./App.css';import React,{useState,Fragment,useEffect}from'react';import AddNoteForm from'./forms/AddNoteForm';import EditNoteForm from'./forms/EditNoteForm';import NoteTable from'./tables/NoteTable';import{Container,Row,Col,Jumbotron,Button,Form,Input}from'reactstrap';import{useCookies}from'react-cookie';var App=function App(){// Data\nvar notesData=[];var initialFormState={id:0,text:'',confidential:false};// Setting state\nvar _useState=useState(notesData),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];var _useState3=useState(initialFormState),_useState4=_slicedToArray(_useState3,2),currentNote=_useState4[0],setCurrentNote=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),editing=_useState6[0],setEditing=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isAuthenticated=_useState8[0],setAuthenticated=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),authenticatedUser=_useState10[0],setAuthenticatedUser=_useState10[1];var _useCookies=useCookies(['XSRF-TOKEN']),_useCookies2=_slicedToArray(_useCookies,1),cookies=_useCookies2[0];var getNotes=function getNotes(){var response,_notes;return _regeneratorRuntime.async(function getNotes$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(fetch('/api/notes'));case 3:response=_context.sent;_context.next=6;return _regeneratorRuntime.awrap(response.json());case 6:_notes=_context.sent;setNotes(_notes);_context.next=12;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);case 12:case\"end\":return _context.stop();}}},null,null,[[0,10]]);};useEffect(function(){// Create a scoped async function in the hook\nfunction runAsync(){var response,body;return _regeneratorRuntime.async(function runAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(fetch('/api/user'));case 3:response=_context2.sent;_context2.next=6;return _regeneratorRuntime.awrap(response.text());case 6:body=_context2.sent;if(body===''){setAuthenticated(false);setAuthenticatedUser('');}else{setAuthenticated(true);setAuthenticatedUser(body);getNotes();}_context2.next=12;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);case 12:case\"end\":return _context2.stop();}}},null,null,[[0,10]]);}// Execute the created function directly\nrunAsync();// https://stackoverflow.com/a/55854902/1098564  \n// eslint-disable-next-line\n},[]);// CRUD operations\nvar addNote=function addNote(note){fetch('/api/notes',{// credentials: 'include',\nmethod:'POST',headers:{'Accept':'application/json','Content-Type':'application/json','X-XSRF-TOKEN':cookies['XSRF-TOKEN']},body:JSON.stringify(note)}).then(function(result){getNotes();});};var deleteNote=function deleteNote(id){setEditing(false);fetch(\"/api/notes/\".concat(id),{// credentials: 'include',\nmethod:'DELETE',headers:{'Accept':'application/json','Content-Type':'application/json','X-XSRF-TOKEN':cookies['XSRF-TOKEN']}}).then(function(){getNotes();});};var updateNote=function updateNote(id,updatedNote){setEditing(false);fetch(\"/api/notes/\".concat(id),{// credentials: 'include',\nmethod:'PUT',headers:{'Accept':'application/json','Content-Type':'application/json','X-XSRF-TOKEN':cookies['XSRF-TOKEN']},body:JSON.stringify(updatedNote)}).then(function(result){getNotes();});};var editRow=function editRow(note){setEditing(true);setCurrentNote({id:note.id,text:note.text,confidential:note.confidential});};var login=function login(){var port=window.location.port?':'+window.location.port:'';window.location.href='//'+window.location.hostname+port+'/private';};return React.createElement(Container,null,React.createElement(Jumbotron,{id:\"jumbotron\"},React.createElement(\"h1\",null,\"CRUD App with Hooks\"),isAuthenticated?React.createElement(React.Fragment,null,React.createElement(Form,{action:\"/logout\",method:\"POST\"},React.createElement(Input,{type:\"hidden\",name:\"_csrf\",value:cookies['XSRF-TOKEN']}),React.createElement(\"h3\",null,\"Welcome \",authenticatedUser,\"!\"),React.createElement(Button,{color:\"secondary\"},\"Logout\"))):React.createElement(Button,{onClick:login},\"Login\")),isAuthenticated&&React.createElement(Row,null,React.createElement(Col,{lg:\"6\"},editing?React.createElement(Fragment,null,React.createElement(\"h2\",null,\"Edit note\"),React.createElement(EditNoteForm,{editing:editing,setEditing:setEditing,currentNote:currentNote,updateNote:updateNote})):React.createElement(Fragment,null,React.createElement(\"h2\",null,\"Add note\"),React.createElement(AddNoteForm,{addNote:addNote}))),React.createElement(Col,{lg:\"6\"},React.createElement(\"h2\",null,\"View notes\"),React.createElement(NoteTable,{notes:notes,editRow:editRow,deleteNote:deleteNote}))));};export default App;","map":{"version":3,"sources":["/Users/sudeep/Library/Mobile Documents/com~apple~CloudDocs/myfiles/NEW_LEARNINGS/SPRING-BOOT/KAFKA/STOCKS-ESG-SERVICES/dev-playground/spring-boot-dev/stocks-example/stocks-gateway/src/main/ui/src/App.tsx"],"names":["React","useState","Fragment","useEffect","AddNoteForm","EditNoteForm","NoteTable","Container","Row","Col","Jumbotron","Button","Form","Input","useCookies","App","notesData","initialFormState","id","text","confidential","notes","setNotes","currentNote","setCurrentNote","editing","setEditing","isAuthenticated","setAuthenticated","authenticatedUser","setAuthenticatedUser","cookies","getNotes","fetch","response","json","runAsync","body","addNote","note","method","headers","JSON","stringify","then","result","deleteNote","updateNote","updatedNote","editRow","login","port","window","location","href","hostname"],"mappings":"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","sourcesContent":["// adapted from https://github.com/taniarascia/react-hooks\n\nimport './App.css'\nimport React, { useState, Fragment, useEffect } from 'react'\nimport AddNoteForm from './forms/AddNoteForm'\nimport EditNoteForm from './forms/EditNoteForm'\nimport NoteTable from './tables/NoteTable'\nimport { Note } from './Note'\nimport { Container, Row, Col, Jumbotron, Button, Form, Input } from 'reactstrap'\nimport { useCookies } from 'react-cookie'\n\nconst App = () => {\n  // Data\n  const notesData : Note[] = []\n  const initialFormState = {id: 0, text: '', confidential: false }\n\n  // Setting state\n  const [ notes, setNotes ] = useState(notesData)\n  const [ currentNote, setCurrentNote ] = useState(initialFormState)\n  const [ editing, setEditing ] = useState(false)\n  const [ isAuthenticated, setAuthenticated ] = useState(false)\n  const [ authenticatedUser, setAuthenticatedUser ] = useState('')\n  const [ cookies ] = useCookies(['XSRF-TOKEN'])\n\n  const getNotes = async () => {\n    try {\n      const response = await fetch('/api/notes')\n      const notes = await response.json()\n      setNotes(notes)\n    } catch {\n      // add better error handling here (e.g. 401?)\n    }\n  }\n\n  useEffect(() => {\n    // Create a scoped async function in the hook\n    async function runAsync() {\n      try {\n        const response = await fetch('/api/user')\n        const body = await response.text()\n\n        if (body === '') {\n          setAuthenticated(false)\n          setAuthenticatedUser('')\n        } else {\n          setAuthenticated(true)\n          setAuthenticatedUser(body)\n          getNotes()\n        }\n      } catch {\n        // add better error handling here\n      }\n    }\n    // Execute the created function directly\n    runAsync()\n  // https://stackoverflow.com/a/55854902/1098564  \n  // eslint-disable-next-line\n  }, [])\n\n  // CRUD operations\n  const addNote = (note: {text: string, confidential: boolean}) => {\n    fetch('/api/notes', {\n      // credentials: 'include',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-XSRF-TOKEN': cookies['XSRF-TOKEN']\n      },\n      body: JSON.stringify(note),\n    }).then((result) => {\n      getNotes()\n    })\n  }\n    \n  const deleteNote = (id: number) => {\n    setEditing(false)\n\n    fetch(`/api/notes/${id}`, {\n      // credentials: 'include',\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-XSRF-TOKEN': cookies['XSRF-TOKEN']\n      }\n    }).then(() => {\n        getNotes()\n    })\n  }\n\n  const updateNote = (id: number, updatedNote: Note) => {\n    setEditing(false)\n\n    fetch(`/api/notes/${id}`, {\n      // credentials: 'include',\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-XSRF-TOKEN': cookies['XSRF-TOKEN']\n      },\n      body: JSON.stringify(updatedNote),\n    }).then((result) => {\n      getNotes()\n    })\n  }\n\n  const editRow = (note: Note) => {\n    setEditing(true)\n\n    setCurrentNote({ id: note.id, text: note.text, confidential: note.confidential })\n  }\n  \n  const login = () => {\n    let port = (window.location.port ? ':' + window.location.port : '')\n    window.location.href = '//' + window.location.hostname + port + '/private'\n  }\n\n  return (\n    <Container>\n      <Jumbotron id=\"jumbotron\">\n        <h1>CRUD App with Hooks</h1>\n        {isAuthenticated ?\n        <>\n          <Form action=\"/logout\" method=\"POST\">\n            <Input type=\"hidden\" name=\"_csrf\" value={cookies['XSRF-TOKEN']}/>\n            <h3>Welcome {authenticatedUser}!</h3><Button color=\"secondary\">Logout</Button>\n          </Form>\n        </> :\n        <Button onClick={login}>Login</Button>\n        }\n      </Jumbotron>\n      {isAuthenticated &&\n      <Row>\n        <Col lg=\"6\">\n          {editing ? (\n            <Fragment>\n              <h2>Edit note</h2>\n              <EditNoteForm\n                editing={editing}\n                setEditing={setEditing}\n                currentNote={currentNote}\n                updateNote={updateNote}\n              />\n            </Fragment>\n          ) : (\n            <Fragment>\n              <h2>Add note</h2>\n              <AddNoteForm addNote={addNote} />\n            </Fragment>\n          )}\n        </Col>\n        <Col lg=\"6\">\n          <h2>View notes</h2>\n          <NoteTable notes={notes} editRow={editRow} deleteNote={deleteNote} />\n        </Col>\n      </Row>\n      }\n    </Container>    \n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}